generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  image      String?
  roleId     String
  last_login DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  chats      chat[]
  layouts    layout[]
  role       role      @relation(fields: [roleId], references: [id])
}

model chat {
  id         Int      @id @default(autoincrement())
  user_id    Int
  content    String
  created_at DateTime @default(now())
  type       ChatType @default(TEXT)
  room_id    String
  user       user     @relation(fields: [user_id], references: [id])
}

model cctv {
  id         Int      @id @default(autoincrement())
  name       String
  path_slug  String   @unique
  rtsp_url   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  lat        String
  long       String
  status  Boolean @default(false)
  star       Boolean  @default(false)
}

model helmet {
  name       String
  path_slug  String   @unique
  rtsp_url   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status     Boolean  @default(false)
  id         Int      @id @default(autoincrement())
  star       Boolean  @default(false)
}

model body_worm {
  name       String
  path_slug  String   @unique
  rtsp_url   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  id         Int      @id @default(autoincrement())
  star       Boolean  @default(false)
  status     Boolean  @default(false)
  need_convert Boolean @default(false)
}

model role {
  id          String            @id @default(uuid())
  name        String            @unique
  created_at  DateTime          @default(now())
  updated_at  DateTime          @updatedAt
  permissions role_permission[]
  users       user[]
}

model permission {
  id         Int               @id @default(autoincrement())
  name       String
  code       String            @unique
  created_at DateTime          @default(now())
  roles      role_permission[]
}

model role_permission {
  roleId       String
  permissionId Int
  created_at   DateTime   @default(now())
  permission   permission @relation(fields: [permissionId], references: [id])
  role         role       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
}

model layout {
  id         Int      @id @default(autoincrement())
  name       String
  layout     Json
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user_id    Int
  user       user     @relation(fields: [user_id], references: [id])
}

model settings {
  id         String   @id @default(uuid())
  name       String   @unique
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum ChatType {
  TEXT
  VIDEO
  AUDIO
}
